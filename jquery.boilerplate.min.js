;(function ($, window, document, undefined) {
    var pluginName = 'defaultPluginName';
    var defaults = {
        propertyName: 'value'
    };

    var Plugin = function (element, options) {
        this.element = element;
        this.options = $.extend({}, defaults, options);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
    }

    Plugin.prototype = {
        init: function () {
            // code goes here
        },
        option: function (options) {
            if (typeof options === 'string') {
                if (aguments.length = 1) {
                    return this.options[options];
                } else {
                    options = {aguments[0]: aguments[1]};
                }
            }
            $.extend(this.options, options);
        },
        yourOtherFunction: function () {
            // some logic
        }
    };
    
    $.fn[pluginName] = function (options) {
        if (options === 'init') {
            options = Array.prototype.slice.call(arguments, 1);
        }
        if (options === undefined || typeof options === 'object') {
            return this.each(function () {
                if (!$.data(this, 'plugin_' + pluginName)) {
                    $.data(this, 'plugin_' + pluginName, new Plugin( this, options ));
                }
            });
        } else if (typeof options === 'string' && options[0] !== '_') {
            return this.each(function () {
                var instance = $.data(this, 'plugin_' + pluginName);
                if (instance instanceof Plugin && typeof instance[options] === 'function') {
                    instance[options].apply(instance, Array.prototype.slice.call(arguments, 1));
                }
            });
        }
    };
    
    $.fn[pluginName].defaults = defaults;
})(jQuery, window, document);
